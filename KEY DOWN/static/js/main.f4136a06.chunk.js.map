{"version":3,"sources":["Images/Login.png","Account Components/Login.js","Account Components/AccountInfo.js","Account.js","Home Components/DisplayWords.js","Home Components/ShowTestChar.js","Home Components/ShowCharSpeed.js","Home Components/ShowPrevResult.js","Home Components/Settings.js","Home.js","About.js","MyStats Components/Profile.js","MyStats Components/AllTimeStats.js","MyStats Components/KeySpeed.js","MyStats.js","GlobalStats Components/GlobalAverage.js","GlobalStats Components/AverageSpeed.js","GlobalStats Components/MaxSpeed.js","GlobalStats Components/MinError.js","GlobalStats Components/AverageCharSpeed.js","SearchUser Components/Profile.js","SearchUser Components/UserStats.js","SearchUser Components/KeySpeed.js","SearchUser Components/SearchRes.js","GlobalStats.js","SearchUser.js","Layout Components/Header.js","Layout Components/LeftMargin.js","Layout Components/NavBar.js","Layout Components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Login","darkMode","setGlobalLoggedIn","userList","getUserList","useState","username","setUsername","password","setPassword","correctPas","setCorrectPas","correctUser","setCorrectUser","showPas","setShowPas","register","setRegister","loading","setLoading","useEffect","document","title","className","src","LoginImage","alt","height","width","onClick","onSubmit","e","preventDefault","alert","ascii","charCodeAt","user","axios","post","then","res","data","token","window","localStorage","setItem","catch","type","value","placeholder","maxLength","required","onChange","target","indexOf","style","color","minLength","length","AccountInfo","get","headers","getItem","ans","loginDetails","confirm","removeItem","delete","fontSize","position","bottom","Account","globalLoggedIn","setUserList","err","console","log","DisplayWords","words","errorInd","currInd","focus","testFontSize","split","map","char","ind","ShowTestChar","testVariables","String","fromCharCode","ShowCharSpeed","charSpeed","totalTime","showInfo","setShowInfo","flatMap","item","cn","onMouseEnter","onMouseLeave","textAlign","marginBottom","fontWeight","backgroundColor","ShowPrevResult","testLength","error","restartTest","startNewTest","setDisplaySettings","setTestFontSize","speed","toFixed","accuracy","marginRight","Settings","puncLetters","selectAll","setSelectAll","countChar","setCountChar","capLet","setCapLet","puncChar","setPuncChar","generateWords","testChar","setTestChar","wordsCount","setWordsCount","lettersCount","setLettersCount","updateSettings","prevPuncChar","prevCapLet","prevWordsCount","prevLettersCount","prevSelectAll","prevCountChar","prevTestChar","copyTestChar","setCopyTestChar","words2","setWords2","copyTestVariables","setCopyTestVariables","tempTestVariables","forEach","tv","num_words","Math","max","floor","random","test","i","num_letters","j","letter","pl","id","checked","htmlFor","temp1","Array","fill","temp2","updatedTestChar","pos","min","Home","updateStats","setTestVariables","charTime","setCharTime","charCount","setCharCount","displaySettings","setTestLength","prevTime","setPrevTime","setCharSpeed","startTime","setStartTime","setTotalTime","prevError","setPrevError","currError","setCurrError","setErrorInd","setWords","setCurrInd","setFocus","loading1","setLoading1","loading2","setLoading2","handleKeyDown","arr1","arr2","addEventListener","settings","prevStats","time","removeEventListener","body","method","url","response","autoFocus","onKeyDown","key","Date","now","temp","currTime","indTemp","tempCharCount","tempCharTime","tempCharSpeed","x","config","put","updatePrevStats","onFocus","onBlur","readOnly","About","href","rel","Profile","dateCreated","AllTimeStats","totalTest","averageSpeed","averageError","maxSpeed","totalTestLength","KeySpeed","totalCharCount","totalCharSpeed","totalCharTime","MyStats","setDateCreated","setTotalTest","setMaxSpeed","setTotalTestLength","setAverageError","setTotalCharCount","setTotalCharTime","setTotalCharSpeed","setAverageSpeed","tempDate","day","getDate","month","getMonth","year","getFullYear","allTimeStats","totalTests","milliseconds","seconds","minutes","hours","avgerr","averSpeed","push","getUserStats","to","GlobalAverage","AverageSpeed","avgSpeedList","setShowRes","MaxSpeed","maxSpeedList","MinError","minErrorList","AverageCharSpeed","averageCharSpeed","UserStats","SearchRes","flag","setTotalTests","count","GlobalStats","setAverageCharSpeed","setAvgSpeedList","setMinErrorList","setMaxSpeedList","showRes","avgspeed","avgList","errList","maxList","averageSpeedSortedUsers","errorSortedUsers","maxSpeedSortedUsers","SearchUser","filteredUserList","setFilteredUserList","showUsername","setShowUsername","setCount","tempUserList","filter","dupItem","toLowerCase","searchVal","includes","slice","Header","borderBottom","LeftMargin","borderRight","NavBar","setDarkMode","changeDarkState","activeClassName","charAt","toUpperCase","overflow","cursor","exact","Footer","borderTop","top","App","a","dm","fs","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f4136a06.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Login.3aa81976.png\";","import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {BsFillPersonFill} from 'react-icons/bs';\r\nimport {BiShow} from 'react-icons/bi';\r\nimport {BiHide} from 'react-icons/bi';\r\nimport {FaLock} from 'react-icons/fa';\r\nimport LoginImage from '../Images/Login.png';\r\nimport {GoVerified} from 'react-icons/go';\r\nimport { FaTimesCircle } from 'react-icons/fa';\r\n\r\nconst Login = ({darkMode,setGlobalLoggedIn,userList,getUserList}) => {\r\n  const [username,setUsername]=useState('');\r\n  const [password,setPassword]=useState('');\r\n  const [correctPas,setCorrectPas]=useState(false);\r\n  const [correctUser,setCorrectUser]=useState(false);\r\n  const [showPas,setShowPas]=useState(false);\r\n  const [register,setRegister]=useState(true);\r\n  const [loading,setLoading]=useState(false);\r\n\r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n    if(register){\r\n      if(!correctUser){\r\n        alert('Sorry the username already exists. Please select a different username.');\r\n        return;\r\n      }\r\n      const ascii=username[0].charCodeAt();\r\n      if((ascii>=65&&ascii<=90)||(ascii>=97&&ascii<=122)){\r\n        const user={username,password}\r\n        setLoading(true);\r\n        axios.post('https://key-down.herokuapp.com/api/auth/register',user).then(res=>res.data).then(token=>{\r\n          setLoading(false);\r\n          window.localStorage.setItem('auth-token',token);\r\n          getUserList();\r\n          setGlobalLoggedIn(true);\r\n        }).catch(()=>{\r\n          setLoading(false);\r\n          alert('Sorry the username already exists. Please change the username.');\r\n        })\r\n      }\r\n      else{\r\n        alert('The first character of your username must be an alphabet.');\r\n        return;\r\n      }\r\n    }\r\n    else{\r\n      const user={username,password}\r\n      setLoading(true);\r\n      axios.post('https://key-down.herokuapp.com/api/auth/login',user).then(res=>res.data).then(token=>{\r\n        setLoading(false);\r\n        window.localStorage.setItem('auth-token',token);\r\n        setGlobalLoggedIn(true);\r\n      }).catch(()=>{\r\n        setLoading(false);\r\n        alert('Sorry invalid username or password');\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    document.title=\"Sign in/Register\";\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n    {\r\n      loading?\r\n      <div className='loading loading-home' />\r\n      :\r\n      <div className='login'>\r\n        <img src={LoginImage} alt=\"Login\" height=\"100rem\" width=\"100rem\"\r\n        className=\"login-image\" />\r\n        <br />\r\n        <BsFillPersonFill className=\"icon-people\" />\r\n        <FaLock className={`${register?'icon-password-register':'icon-password'}`}/>\r\n        {\r\n          showPas===false?\r\n          <BiHide className={`${register?'icon-show-hide-register':'icon-show-hide'}`} title=\"Show Password\" onClick={()=>{\r\n            setShowPas(!showPas)\r\n          }} />\r\n          :\r\n          <BiShow className={`${register?'icon-show-hide-register':'icon-show-hide'}`} title=\"Hide Password\" onClick={()=>{\r\n            setShowPas(!showPas)\r\n          }} />\r\n        }\r\n        <br />\r\n        <form onSubmit={handleSubmit}>\r\n          <label className=\"login-label\">Username</label>\r\n          <input\r\n          className=\"login-input\"\r\n          type=\"text\"\r\n          value={username}\r\n          placeholder=\"Enter Username (max 25 characters)\"\r\n          maxLength='25'\r\n          required \r\n          onChange={(e)=>{\r\n            setUsername(e.target.value)\r\n            if(userList.indexOf(e.target.value)!==-1){\r\n              setCorrectUser(false);\r\n            }\r\n            else{\r\n              setCorrectUser(true);\r\n            }\r\n          }} />\r\n          {\r\n            register&&\r\n            <div className=\"pass-length-warn\">\r\n              <span style={{color:'red'}}>* </span>\r\n              Your username will be visible to other users.\r\n            </div>\r\n          }\r\n          <br />\r\n          <label className=\"login-label\">Password</label>\r\n          <input\r\n          className=\"login-input\"\r\n          type={`${showPas?'text':'password'}`}\r\n          value={password}\r\n          placeholder=\"Enter Password\"\r\n          required\r\n          minLength='6'\r\n          onChange={(e)=>{\r\n            if(e.target.value.length<6){\r\n              setCorrectPas(false);\r\n            }\r\n            else{\r\n              setCorrectPas(true);\r\n            }\r\n            setPassword(e.target.value);\r\n          }} />\r\n          <br />\r\n          {\r\n            register&&!correctPas&&\r\n            <div className=\"pass-length-warn\">\r\n              <span style={{color:'red'}}>* </span>\r\n              Password must be atleast 6 characters long.\r\n            </div>\r\n          }\r\n          {\r\n            register?\r\n            <input \r\n            className={`${darkMode?'login-submit-dark':'login-submit'}`}\r\n            type=\"submit\"\r\n            value=\"Register\" />\r\n            :\r\n            <input \r\n            className={`${darkMode?'login-submit-dark':'login-submit'}`} \r\n            type=\"submit\" \r\n            value=\"Login\" />\r\n          }\r\n        </form>\r\n        {\r\n          register?\r\n          <div className=\"change-sign-in\">\r\n            Already have an account?\r\n            <span className=\"change-register\" onClick={()=>{\r\n              setRegister(!register);\r\n            }}>  Login</span>\r\n          </div>\r\n          :\r\n          <div className=\"change-sign-in\">\r\n            Don't have an account? \r\n            <span className=\"change-register\" onClick={()=>{\r\n              setRegister(!register);\r\n            }}>  Register</span>\r\n          </div>\r\n        }\r\n        {\r\n          register&&correctPas?\r\n          <div>\r\n            <GoVerified className={`${darkMode?'icon-verified-dark':'icon-verified'}`} />\r\n          </div>\r\n          :\r\n          <div>\r\n            <GoVerified className='icon-hidden' />\r\n          </div>\r\n        }\r\n        {\r\n          register&&username.length>0?\r\n          correctUser?\r\n          <div>\r\n            <GoVerified className={`${darkMode?'icon-verified-username-dark':'icon-verified-username'}`} />\r\n          </div>\r\n          :\r\n          <div>\r\n            <FaTimesCircle title=\"Sorry the username is already taken\" className={`${darkMode?'icon-verified-username-dark':'icon-verified-username'}`} style={{color:'red'}}/>\r\n          </div>\r\n          :\r\n          <div />\r\n        }\r\n      </div>\r\n    }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import axios from 'axios';\r\nimport React,{useState,useEffect} from 'react'\r\nimport { IoLogOutOutline } from 'react-icons/io5';\r\nimport {FaTrashAlt} from 'react-icons/fa';\r\n\r\nconst AccountInfo = ({setGlobalLoggedIn,getUserList,darkMode}) => {\r\n  const [username,setUsername]=useState('');\r\n  const [loading,setLoading]=useState(true);\r\n\r\n  function handleLogout(e) {\r\n    e.preventDefault();\r\n    if(window.confirm('Are you sure you want to log out?')){\r\n      window.localStorage.removeItem('auth-token');\r\n      setGlobalLoggedIn(false);\r\n    }\r\n  }\r\n  \r\n  function handleDelete(e){\r\n    e.preventDefault();\r\n    if(window.confirm('Are you sure you want to delete your account?')){\r\n      setLoading(true);\r\n      axios.delete('https://key-down.herokuapp.com/api/user/delete',{\r\n        headers: {\r\n          'auth-token':window.localStorage.getItem('auth-token')\r\n        }\r\n      }).then(()=>{\r\n        setLoading(false);\r\n        window.localStorage.removeItem('auth-token');\r\n        getUserList();\r\n        setGlobalLoggedIn(false);\r\n      }).catch(()=>{\r\n        setLoading(false);\r\n        alert('Sorry an error occured.')\r\n      });\r\n    }\r\n  }\r\n\r\n  function getUsername(){\r\n    setLoading(true);\r\n    axios.get('https://key-down.herokuapp.com/api/user/username',{\r\n      headers: {\r\n        'auth-token':window.localStorage.getItem('auth-token')\r\n      }\r\n    }).then(res=>res.data).then(ans=>{\r\n      setLoading(false);\r\n      setUsername(ans.loginDetails.username);\r\n      document.title=ans.loginDetails.username;\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getUsername();\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n    {\r\n      loading?<div className='loading loading-home' />\r\n      :\r\n      <div className='account-info'>\r\n        <h2 className=\"display-username\">\r\n          Username: {username}\r\n        </h2>\r\n        <fieldset className=\"account-info-fieldset\">\r\n          <legend className=\"account-info-legend\">\r\n            Account Actions\r\n          </legend>\r\n          <p>\r\n            Your data is stored with us and you can access your account anywhere using your username and password.<br />To logout click the button below. Note that your typing stats will only be stored by us when you are logged in.\r\n          </p>\r\n          <button onClick={handleLogout} className={`${darkMode?'logout-btn-dark':'logout-btn'}`}>\r\n            <IoLogOutOutline className={`${darkMode?'logout-icon-dark':'logout-icon'}`} />\r\n            <span className=\"logout-text\">Logout</span>\r\n          </button>\r\n        </fieldset>\r\n        <fieldset className=\"account-info-fieldset\">\r\n          <legend className=\"account-info-legend\">\r\n            Delete Account\r\n          </legend>\r\n          <p>\r\n            To delete your account click the button below. Note that once you delete your account all your typing data will be deleted and it cannot be recovered.Make sure you completely understand the consequences before proceeding.\r\n          </p>\r\n          <button onClick={handleDelete} className={`${darkMode?'logout-btn-dark':'logout-btn'}`}>\r\n            <FaTrashAlt className={`${darkMode?'logout-icon-dark':'logout-icon'}`} style={{fontSize:'1.2rem'}} />\r\n            <span className=\"logout-text\" style={{position:'relative',bottom:'0.15rem'}}>\r\n              Delete\r\n            </span>\r\n          </button>\r\n        </fieldset>\r\n      </div>\r\n    }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccountInfo\r\n","import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios';\r\nimport Login from './Account Components/Login';\r\nimport AccountInfo from './Account Components/AccountInfo';\r\n\r\nconst Account = ({darkMode,globalLoggedIn,setGlobalLoggedIn}) => {\r\n  const [userList,setUserList]=useState([]);\r\n  const [loading,setLoading]=useState(true);\r\n\r\n  function getUserList(){\r\n    setLoading(true);\r\n    axios.get('https://key-down.herokuapp.com/api/users').then(res=>res.data).then(ans=>{\r\n      setUserList(ans);\r\n      setLoading(false);\r\n    }).catch(err=>{\r\n      setLoading(false);\r\n      console.log(err)\r\n    });\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    getUserList();\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        loading?<div className='loading loading-home' />\r\n        :\r\n        globalLoggedIn===true?\r\n        <AccountInfo setGlobalLoggedIn={setGlobalLoggedIn} getUserList={getUserList} darkMode={darkMode} />\r\n        :\r\n        <Login darkMode={darkMode} setGlobalLoggedIn={setGlobalLoggedIn} userList={userList} getUserList={getUserList} />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Account\r\n","import React from 'react'\r\n\r\nconst DisplayWords = ({words,errorInd,currInd,focus,darkMode,testFontSize}) => {\r\n  return (\r\n    <div className={`algn ${testFontSize===0?'size-0':`${testFontSize===1?'size-1':'size-2'}`}`}>\r\n      {\r\n        words.split('').map((char,ind)=>{\r\n          if(ind<currInd){\r\n            if(errorInd[ind]===false){\r\n              if(words[ind]==='\\u2423'){\r\n                return (<span key={ind} className={`${focus?`${darkMode?'correct-dark':'correct'}`:'inactive'}`}>{char}<wbr /></span>)\r\n              }\r\n              else{\r\n                return (<span key={ind} className={`${focus?`${darkMode?'correct-dark':'correct'}`:'inactive'}`}>{char}</span>);\r\n              }\r\n            }\r\n            else{\r\n              if(words[ind]==='\\u2423'){\r\n                return (<span key={ind} className={`${focus?'incorrect':'inactive'}`}>{char}<wbr /></span>);\r\n              }\r\n              else{\r\n                return (<span key={ind} className={`${focus?'incorrect':'inactive'}`}>{char}</span>);\r\n              }\r\n            }\r\n          }\r\n          else if(ind===currInd){\r\n            if(words[ind]==='\\u2423'){\r\n              return (<span key={ind} className={`${focus? `${darkMode?'curr-letter-dark':'curr-letter'}`:'inactive'}`}>{char}<wbr /></span>);\r\n            }\r\n            else{\r\n              return (<span key={ind} className={`${focus? `${darkMode?'curr-letter-dark':'curr-letter'}`:'inactive'}`}>{char}</span>);\r\n            }\r\n          }\r\n          else{\r\n            if(words[ind]==='\\u2423'){\r\n              return (<span key={ind} className={`${focus?'':'inactive'}`}>{char}<wbr /></span>);\r\n            }\r\n            else{\r\n              return (<span key={ind} className={`${focus?'':'inactive'}`}>{char}</span>);\r\n            }\r\n          }\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DisplayWords\r\n","import React from 'react'\r\n\r\nconst ShowTestChar = ({darkMode,testVariables}) => {\r\n  return (\r\n    <div className={`${darkMode?'stats-2-dark':'stats-2'}`}>\r\n      <span style={{color:'#00a3cc'}}>Current keys:  </span>\r\n      {\r\n        testVariables.map((char,ind)=>{\r\n          var ascii=char.charCodeAt()-32;\r\n          if(ind!==testVariables.length-1){\r\n            return(<span className={`${darkMode?'test-char-dark':'test-char'}`} key={ind}>{String.fromCharCode(ascii)}, </span>)\r\n          }\r\n          else{\r\n            return(<span className={`${darkMode?'test-char-dark':'test-char'}`} key={ind}>{String.fromCharCode(ascii)}</span>)\r\n          }\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShowTestChar\r\n","import {useState} from 'react';\r\nimport {FaQuestionCircle} from 'react-icons/fa';\r\n\r\nconst ShowCharSpeed = ({darkMode,charSpeed,totalTime}) => {\r\n  const [showInfo,setShowInfo]=useState(false);\r\n  return (\r\n    <div className={`${darkMode?'stats-2-dark':'stats-2'}`}>\r\n      <span style={{color:'#00a3cc'}}>Keys' Speed: </span>\r\n      {\r\n        (totalTime===0)?<output className={`${darkMode?'output-dark':'output'}`}>NA</output>\r\n        :charSpeed.flatMap((item,ind)=>{\r\n          var ascii=ind+65;\r\n          if(item===-1||item>0){\r\n            var cn=`${item===-1?'speed-1':`${item<=20?'speed-2':`${item<=50?'speed-3':`${item<=80?'speed-4':'speed-5'}`}`}`}`;\r\n            //console.log(item,cn);\r\n            return (<span className={`${cn} ${darkMode?'char-speed-dark':'char-speed'}`} key={ind} title={`${item===-1?`No occurence of this character in the test`:`Speed= ${item} WPM`}`}>{String.fromCharCode(ascii)}</span>)\r\n          }\r\n          else{\r\n            return ([]);\r\n          }\r\n        })\r\n      }\r\n      <span className=\"char-speed-details\" onMouseEnter={()=>{\r\n        setShowInfo(true);\r\n      }} onMouseLeave={()=>{\r\n        setShowInfo(false);\r\n      }}><FaQuestionCircle style={{color:'#0066ff',fontSize:'22px'}}/>\r\n      {\r\n        showInfo&&<div className={`${darkMode?'tooltip-dark':'tooltip'}`}>\r\n          <div style={{textAlign:'center',marginBottom:'5px',fontWeight:'bold'}}>Color Codes</div>\r\n          <span className=\"color-box\" style={{backgroundColor:'white'}}/>\r\n          <span> No occurence.\r\n          </span>\r\n          <br />\r\n          <span className=\"color-box\" style={{backgroundColor:'rgba(255,0,0,0.8)'}}/>\r\n          <span> 0 &lt;= Speed &lt;=20\r\n          </span>\r\n          <br />\r\n          <span className=\"color-box\" style={{backgroundColor:'rgba(0,170,0,0.8)'}}/>\r\n          <span> 20 &lt; Speed &lt;=50\r\n          </span>\r\n          <br />\r\n          <span className=\"color-box\" style={{backgroundColor:'rgba(0,250,0,0.8)'}} />\r\n          <span> 50 &lt; Speed &lt;=80\r\n          </span>\r\n          <br />\r\n          <span className=\"color-box\" style={{backgroundColor:'rgba(26,198,255,0.8)'}}/>\r\n          <span> Speed &gt;80\r\n          </span>\r\n        </div>\r\n      }\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShowCharSpeed\r\n","import React from 'react';\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport { MdRedo } from \"react-icons/md\";\r\nimport { MdUndo } from \"react-icons/md\";\r\nimport {ImFontSize} from \"react-icons/im\";\r\nimport ShowTestChar from './ShowTestChar';\r\nimport ShowCharSpeed from './ShowCharSpeed'\r\n\r\nconst ShowPrevResult = ({totalTime,testLength,error,restartTest,startNewTest,testVariables,darkMode,charSpeed,setDisplaySettings,testFontSize,setTestFontSize}) => {\r\n  var speed=((testLength*200*60)/totalTime).toFixed(1);\r\n  var accuracy=(100-((error/testLength)*100)).toFixed(2);\r\n  function changeTestFontSize(){\r\n    window.localStorage.setItem('fs',(testFontSize+1)%3);\r\n    setTestFontSize((testFontSize+1)%3)\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"icons\">\r\n        <span title=\"Set your own custom test\" className={`${darkMode?\"icon-dark\":\"icon\"}`} onClick={()=>{\r\n          setDisplaySettings(true);\r\n        }}><FiSettings/></span>\r\n        <span title=\"Restart the current test\" className={`${darkMode?\"icon-dark\":\"icon\"}`} onClick={restartTest}><MdUndo/></span>\r\n        <span title=\"Start a new test\" className={`${darkMode?\"icon-dark\":\"icon\"}`} onClick={startNewTest}><MdRedo /></span>\r\n        <span title={`${testFontSize===0?'Switch to medium font':`${testFontSize===1?'Switch to large font':'Switch to small font'}`}`} className={`${darkMode?\"icon-dark\":\"icon\"}`} onClick={changeTestFontSize} ><ImFontSize /></span>\r\n\r\n      </div>\r\n      {\r\n      (totalTime===0)?\r\n      <div className={`${darkMode?'stats-dark':'stats'}`}>\r\n        <span style={{color: '#00a3cc', marginRight:'70px'}}>Speed: <output className={`${darkMode?'output-dark':'output'}`}>NA</output></span> \r\n        <span style={{color: '#e60000',marginRight:'70px'}}>Error: <output className={`${darkMode?'output-dark':'output'}`}>NA</output></span> \r\n        <span style={{color: '#00cc44'}}> Accuracy: <output className={`${darkMode?'output-dark':'output'}`}>NA</output></span>\r\n      </div>\r\n      :\r\n      <div className={`${darkMode?'stats-dark':'stats'}`}>\r\n        <span style={{color: '#00a3cc',marginRight:'70px'}} title='Speed is in words per minute'>Speed: <output className={`${darkMode?'output-dark':'output'}`}>{speed}</output><span className={`${darkMode?'output-dark':'output'}`} style={{fontSize:'1rem'}}> WPM</span></span> \r\n        <span style={{color: '#e60000',marginRight:'70px'}}>Error: <output className={`${darkMode?'output-dark':'output'}`}>{error}</output></span> \r\n        <span style={{color: '#00cc44'}}> Accuracy: <output className={`${darkMode?'output-dark':'output'}`}>{accuracy}%</output></span>\r\n      </div>\r\n      }\r\n      <ShowCharSpeed darkMode={darkMode} charSpeed={charSpeed} totalTime={totalTime}/>\r\n      <ShowTestChar darkMode={darkMode} testVariables={testVariables} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShowPrevResult\r\n","import DisplayWords from './DisplayWords'\r\nimport { useState,useEffect } from 'react';\r\n\r\nconst Settings = ({darkMode,testVariables,puncLetters,selectAll,setSelectAll,countChar,setCountChar,capLet,setCapLet,puncChar,setPuncChar,generateWords,testChar,setTestChar,setDisplaySettings,wordsCount,setWordsCount,lettersCount,setLettersCount,words,errorInd,currInd,focus,testFontSize,updateSettings}) => {\r\n  var temp_arr=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\r\n  const [prevPuncChar]=useState(puncChar);\r\n  const [prevCapLet]=useState(capLet);\r\n  const [prevWordsCount]=useState(wordsCount);\r\n  const [prevLettersCount]=useState(lettersCount);\r\n  const [prevSelectAll]=useState(selectAll);\r\n  const [prevCountChar]=useState(countChar);\r\n  const [prevTestChar]=useState(testChar);\r\n  const [copyTestChar,setCopyTestChar]=useState(testChar);\r\n  const [words2,setWords2]=useState(words);\r\n  const [copyTestVariables,setCopyTestVariables]=useState(testVariables);\r\n  \r\n  useEffect(()=>{\r\n    const t1=[];\r\n    setCopyTestVariables(t1);\r\n    var tempTestVariables=\"\";\r\n    copyTestChar.forEach((item,ind)=>{\r\n      if(item===true){\r\n        var ascii=97+ind;\r\n        tempTestVariables+=String.fromCharCode(ascii)\r\n      }\r\n    });\r\n    const tv=tempTestVariables.split('');\r\n    setCopyTestVariables(tv);\r\n  },[copyTestChar]);\r\n\r\n  useEffect(()=>{\r\n    if(copyTestVariables.length===0){\r\n      return;\r\n    }\r\n    var num_words=Math.max(wordsCount-2,(Math.floor(Math.random()*(wordsCount))+5));\r\n    var test=\"\";\r\n    for(var i=1;i<=num_words;i++){\r\n      var num_letters=Math.floor(Math.random()*(lettersCount))+3;\r\n      for(var j=1;j<=num_letters;j++){\r\n        var letter=Math.floor(Math.random()*(copyTestVariables.length));\r\n        if(j===1&&capLet===true){\r\n          var ascii=copyTestVariables[letter].charCodeAt()-32;\r\n          test+=String.fromCharCode(ascii);\r\n        }\r\n        else{\r\n          test+=copyTestVariables[letter];\r\n        }\r\n      }\r\n      if(i!==num_words){\r\n        if(puncChar===true){\r\n          var pl=Math.floor(Math.random()*puncLetters.length);\r\n          test+=puncLetters[pl];\r\n        }\r\n        test+='\\u2423';\r\n      }\r\n    }\r\n    setWords2(test);\r\n  },[copyTestVariables,puncChar,capLet,puncLetters,wordsCount,lettersCount,copyTestChar]);\r\n\r\n\r\n  function cancelSettings(e){\r\n    e.preventDefault();\r\n    setCapLet(prevCapLet);\r\n    setPuncChar(prevPuncChar);\r\n    setLettersCount(prevLettersCount);\r\n    setWordsCount(prevWordsCount);\r\n    setSelectAll(prevSelectAll);\r\n    setCountChar(prevCountChar);\r\n    setTestChar(prevTestChar);\r\n    setCopyTestChar(prevTestChar);\r\n    setDisplaySettings(false);\r\n  }\r\n  function submitSettings(e){\r\n    e.preventDefault();\r\n    if(countChar<4){\r\n      alert('Please select atleast 4 letters for a better test experience.');\r\n      return;\r\n    }\r\n    generateWords();\r\n    updateSettings(capLet,puncChar,lettersCount,wordsCount,selectAll,testChar);\r\n    setDisplaySettings(false);\r\n  }\r\n  return (\r\n    <div className='settings'>\r\n      <p className=\"set-title\">Settings</p>\r\n      <form>\r\n        <fieldset className=\"settings-fieldset\">\r\n          <legend className=\"settings-legend\">Include in your test</legend>\r\n          <div className=\"form1\">\r\n            <input type=\"checkbox\" id=\"capital\" checked={capLet} onChange={()=>{\r\n              setCapLet(!capLet);\r\n            }} />\r\n            <label className=\"label-1\" htmlFor=\"capital\">Enable Capital Letters</label>\r\n            <input type=\"checkbox\" id=\"punctuation\" checked={puncChar} onChange={()=>{\r\n              setPuncChar(!puncChar);\r\n            }} />\r\n            <label className=\"label-1\" htmlFor=\"punctuation\">Enable Punctuation Characters</label>\r\n          </div>\r\n        </fieldset>\r\n        <fieldset className=\"settings-fieldset\">\r\n          <legend className=\"settings-legend\">Create your own test</legend>\r\n          <p className=\"set-details\">Select atleast 4 letters for a better and more varied test experience.</p>\r\n          <div>\r\n            <input type=\"checkbox\" id=\"select-all\" checked={selectAll} onChange={(e)=>{\r\n              if(e.target.checked===true){\r\n                var temp1=new Array(26);\r\n                temp1.fill(true);\r\n                setCopyTestChar(temp1);\r\n                setTestChar(temp1);\r\n                setSelectAll(true);\r\n                setCountChar(26);\r\n              }\r\n              else{\r\n                var temp2=new Array(26);\r\n                temp2.fill(false);\r\n                setCopyTestChar(temp2);\r\n                setTestChar(temp2);\r\n                setSelectAll(false);\r\n                setCountChar(0);\r\n              }\r\n            }}/>\r\n            <label className=\"label-2\">Select All</label>\r\n          </div>\r\n          <div>\r\n          {\r\n            temp_arr.map((char,ind)=>{\r\n              return(<span key={ind} className=\"display-alphabets\">\r\n                <input className=\"checkbox-2\" type=\"checkbox\" id={char} checked={copyTestChar[ind]} value={copyTestChar[ind]} onChange={(e)=>{\r\n                  if(e.target.checked===false){\r\n                    var temp1=countChar-1;\r\n                    setCountChar(temp1);\r\n                    if(selectAll===true){\r\n                      setSelectAll(false);\r\n                    }\r\n                  }\r\n                  else{\r\n                    var temp2=countChar+1;\r\n                    setCountChar(temp2);\r\n                    if(temp2===26){\r\n                      setSelectAll(true);\r\n                    }\r\n                  }\r\n                  const updatedTestChar=copyTestChar.map((item,pos)=>{\r\n                    if(pos===ind){\r\n                      return (!item);\r\n                    }\r\n                    else{\r\n                      return (item);\r\n                    }\r\n                  });\r\n                  setCopyTestChar(updatedTestChar);\r\n                  setTestChar(updatedTestChar);\r\n                }}/>\r\n                <label className=\"label-3\">{char}</label>\r\n              </span>);\r\n            })\r\n          }\r\n          </div>\r\n        </fieldset>\r\n        <fieldset className=\"settings-fieldset\">\r\n          <legend className=\"settings-legend\">Customize length of your test</legend>\r\n          <p className=\"set-details\">Adjust the length of your test. Pointer towards right means greater length.</p>\r\n          <div className=\"sliders\">\r\n            <div>\r\n              <input type=\"range\" min=\"8\" max=\"20\" value={wordsCount} onChange={(e)=>{\r\n                setWordsCount(e.target.value);\r\n              }} className={`slider-1 ${darkMode?'slider-1-dark':''}`}/>\r\n              <label className=\"label-4\">Adjust words in your test</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"range\" min=\"2\" max=\"7\" value={lettersCount} onChange={(e)=>{\r\n                setLettersCount(e.target.value);\r\n              }} className={`slider-1 ${darkMode?'slider-1-dark':''}`}/>\r\n              <label className=\"label-4\">Adjust letters in your word</label>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n        <fieldset className=\"settings-fieldset\">\r\n          <legend className=\"settings-legend\">Preview your test</legend>\r\n          {\r\n            (countChar<4)?<p className=\"set-details\">Select atleast 4 letters to preview your test</p>\r\n            :<DisplayWords words={words2} errorInd={errorInd} currInd={currInd} focus={focus} darkMode={darkMode} testFontSize={testFontSize} />\r\n          }\r\n        </fieldset>\r\n        <div className=\"submit\">\r\n          <input type=\"submit\" value=\"Save Changes\" className={`${darkMode?'submit-btn-dark':'submit-btn'}`} onClick={submitSettings}/>\r\n          <input type=\"submit\" value=\"Cancel\" className={`${darkMode?'submit-btn-dark':'submit-btn'}`} onClick={cancelSettings} title=\"Return without saving changes\"/>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import React, {useState,useEffect} from 'react';\r\nimport DisplayWords from './Home Components/DisplayWords';\r\nimport ShowPrevResult from './Home Components/ShowPrevResult';\r\nimport Settings from './Home Components/Settings'; \r\nimport axios from 'axios';\r\n\r\nconst Home = ({darkMode,testFontSize,setTestFontSize,updateStats}) => {\r\n  \r\n  //settings state\r\n  const [capLet,setCapLet]=useState(false);\r\n  const [puncChar,setPuncChar]=useState(false);\r\n  const [wordsCount,setWordsCount]=useState(14);\r\n  const [lettersCount,setLettersCount]=useState(5);\r\n  const [testChar,setTestChar]=useState([true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true]);\r\n  var [testVariables,setTestVariables]=useState(['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']);\r\n  const [charTime,setCharTime]=useState([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);\r\n  const [charCount,setCharCount]=useState([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);\r\n  const [selectAll,setSelectAll]=useState(true);\r\n  const [displaySettings,setDisplaySettings]=useState(false);\r\n  const [countChar,setCountChar]=useState(26);\r\n\r\n  //typing stats state\r\n  const [testLength,setTestLength]= useState(0);\r\n  const [prevTime,setPrevTime]=useState(0);\r\n  const [charSpeed,setCharSpeed]=useState([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);\r\n  const [startTime,setStartTime]=useState(0);\r\n  const [totalTime,setTotalTime]=useState(0);\r\n  const [prevError,setPrevError]=useState(0);\r\n  const [currError,setCurrError]=useState(0);\r\n  const [errorInd,setErrorInd]=useState([]);\r\n  const [words,setWords]=useState(\"\");\r\n  const [currInd,setCurrInd]=useState(0);\r\n  const [focus,setFocus]=useState(true);\r\n  const [puncLetters]=useState(['!','?',',','.',';']);\r\n  const [loading1,setLoading1]=useState(true);\r\n  const [loading2,setLoading2]=useState(true);\r\n  \r\n  function updateSettings(capLet,puncChar,lettersCount,wordsCount,selectAll,testChar){\r\n    if(!window.localStorage.getItem('auth-token')){\r\n      return;\r\n    }\r\n    const body={\r\n      'capLet':capLet,\r\n      'puncChar':puncChar,\r\n      'lettersCount':lettersCount,\r\n      'wordsCount':wordsCount,\r\n      'selectAll':selectAll,\r\n      'testChar':testChar\r\n    };\r\n    axios({\r\n      method: 'put',\r\n      url: 'https://key-down.herokuapp.com/api/user/updatesettings',\r\n      data: body,\r\n      headers:{\r\n        'Content-Type': 'application/json',\r\n        'auth-token':window.localStorage.getItem('auth-token')\r\n      }\r\n    }).then().catch(err=>{\r\n      console.log(err.response);\r\n    });\r\n  }\r\n\r\n  function getSettings(){\r\n    if(!window.localStorage.getItem('auth-token')){\r\n      setLoading1(false);\r\n      return;\r\n    }\r\n    setLoading1(true);\r\n    axios.get('https://key-down.herokuapp.com/api/user/getsettings',{\r\n      headers:{\r\n        'auth-token':window.localStorage.getItem('auth-token')\r\n      }\r\n    }).then(res=>res.data).then(ans=>{\r\n      setCapLet(ans.settings.capLet);\r\n      setPuncChar(ans.settings.puncChar);\r\n      setLettersCount(ans.settings.lettersCount);\r\n      setWordsCount(ans.settings.wordsCount);\r\n      setSelectAll(ans.settings.selectAll);\r\n      setTestChar(ans.settings.testChar);\r\n      setLoading1(false);\r\n      }).catch(err=>console.log(err))\r\n  };\r\n\r\n  function updatePrevStats(time,testLength,error,charSpeed){\r\n    if(!window.localStorage.getItem('auth-token')){\r\n      return;\r\n    }\r\n    const body={\r\n      'time':time,\r\n      'testLength':testLength,\r\n      'error':error,\r\n      'charSpeed':charSpeed\r\n    };\r\n    const config={ headers: {\r\n      'auth-token':window.localStorage.getItem('auth-token')\r\n    } };\r\n    axios.put('https://key-down.herokuapp.com/api/user/updateprevstats',body,config).then().catch(err=>{\r\n      console.log(err)\r\n    });\r\n  }\r\n\r\n  function getPrevStats(){\r\n    if(!window.localStorage.getItem('auth-token')){\r\n      setLoading2(false);\r\n      return;\r\n    }\r\n    setLoading2(true);\r\n    axios.get('https://key-down.herokuapp.com/api/user/getprevstats',{\r\n      headers:{\r\n        'auth-token':window.localStorage.getItem('auth-token')\r\n      }\r\n    }).then(res=>res.data).then(ans=>{\r\n      setTotalTime(ans.prevStats.time);\r\n      setPrevError(ans.prevStats.error);\r\n      setTestLength(ans.prevStats.testLength);\r\n      setCharSpeed(ans.prevStats.charSpeed);\r\n      setLoading2(false);\r\n    })\r\n  }\r\n\r\n  const handleKeyDown=(e)=>{\r\n    e.preventDefault();\r\n  }\r\n\r\n  //This useEffect is for the start when settings is fetched from the server and when testChar changes.\r\n  useEffect(()=>{\r\n    var arr1=new Array(26);\r\n    arr1.fill(0);\r\n    setCharCount(arr1);\r\n    var arr2=new Array(26);\r\n    arr2.fill(0);\r\n    setCharTime(arr2);\r\n    const t1=[];\r\n    setTestVariables(t1);\r\n    var tempTestVariables=\"\";\r\n    testChar.forEach((item,ind)=>{\r\n      if(item===true){\r\n        var ascii=97+ind;\r\n        tempTestVariables+=String.fromCharCode(ascii)\r\n      }\r\n    });\r\n    const tv=tempTestVariables.split('');\r\n    setTestVariables(tv);\r\n  },[testChar]);\r\n\r\n  //This useEffect if for mounting and unmounting of the home page to add event listeners and for fetching settings and prev stats in the beginning.\r\n  useEffect(()=>{\r\n    window.addEventListener('keydown',handleKeyDown);\r\n    document.title=\"Practise Typing\";\r\n    getSettings();\r\n    getPrevStats();\r\n    return()=>{\r\n      window.removeEventListener('keydown',handleKeyDown);\r\n    }\r\n  },[])\r\n\r\n  //This function is to basically set testVariables.\r\n  function generateWords(){\r\n    var arr1=new Array(26);\r\n    arr1.fill(0);\r\n    setCharCount(arr1);\r\n    var arr2=new Array(26);\r\n    arr2.fill(0);\r\n    setCharTime(arr2);\r\n    const t1=[];\r\n    setTestVariables(t1);\r\n    var tempTestVariables=\"\";\r\n    testChar.forEach((item,ind)=>{\r\n      if(item===true){\r\n        var ascii=97+ind;\r\n        tempTestVariables+=String.fromCharCode(ascii)\r\n      }\r\n    });\r\n    const tv=tempTestVariables.split('');\r\n    setTestVariables(tv);\r\n  }\r\n\r\n  //This useEffect is to generate words.\r\n  useEffect(()=>{\r\n    if(testVariables.length===0){\r\n      return;\r\n    }\r\n    var num_words=Math.max(wordsCount-2,(Math.floor(Math.random()*(wordsCount))+5));\r\n    var test=\"\";\r\n    for(var i=1;i<=num_words;i++){\r\n      var num_letters=Math.floor(Math.random()*(lettersCount))+3;\r\n      for(var j=1;j<=num_letters;j++){\r\n        var letter=Math.floor(Math.random()*(testVariables.length));\r\n        if(j===1&&capLet===true){\r\n          var ascii=testVariables[letter].charCodeAt()-32;\r\n          test+=String.fromCharCode(ascii);\r\n        }\r\n        else{\r\n          test+=testVariables[letter];\r\n        }\r\n      }\r\n      if(i!==num_words){\r\n        if(puncChar===true){\r\n          var pl=Math.floor(Math.random()*puncLetters.length);\r\n          test+=puncLetters[pl];\r\n        }\r\n        test+='\\u2423';\r\n      }\r\n    }\r\n    setWords(test);\r\n    setCurrInd(0);\r\n    setCurrError(0);\r\n    var err=new Array(test.length);\r\n    err.fill(false);\r\n    setErrorInd(err);\r\n  },[testVariables,puncChar,capLet,puncLetters,wordsCount,lettersCount]);\r\n\r\n  function handleKey({key}){\r\n    if(key==='Escape'){\r\n      restartTest();\r\n      return;\r\n    }\r\n    if(key==='Shift'||key==='CapsLock'){\r\n      return;\r\n    }\r\n    if(currError===0&&currInd===0){\r\n      setStartTime(Date.now());\r\n      setPrevTime(Date.now());\r\n    }\r\n    if(key===words[currInd]||(key===' '&&words[currInd]==='\\u2423')){\r\n      var temp=currInd+1;\r\n      if(currInd!==0){\r\n        const currTime=Date.now()-prevTime;\r\n        setPrevTime(Date.now());\r\n        var indTemp=words[currInd].charCodeAt();\r\n        if(indTemp>=97&&indTemp<=122){\r\n          indTemp-=97;\r\n        }\r\n        else if(indTemp>=65&&indTemp<=90){\r\n          indTemp-=65;\r\n        }\r\n        else{\r\n          indTemp=-1;\r\n        }\r\n        if(indTemp>=0&&indTemp<26){\r\n          var tempCharCount=charCount;\r\n          tempCharCount[indTemp]++;\r\n          setCharCount(tempCharCount);\r\n          var tempCharTime=charTime;\r\n          tempCharTime[indTemp]=tempCharTime[indTemp]+(currTime);\r\n          setCharTime(tempCharTime);\r\n        }\r\n      }\r\n      if(temp===words.length){\r\n        const time=Date.now()-startTime;\r\n        setTotalTime(time);\r\n        setPrevError(currError);\r\n        setTestLength(words.length);\r\n        var tempCharSpeed=new Array(26);\r\n        tempCharSpeed.fill(0);\r\n        for(var x=0;x<26;x++){\r\n          if(testChar[x]===true){\r\n            if(charCount[x]===0){\r\n              tempCharSpeed[x]=-1;\r\n            }\r\n            else{\r\n              tempCharSpeed[x]=((charCount[x]*200*60)/charTime[x]).toFixed(1);\r\n            }\r\n          }\r\n        }\r\n        setCharSpeed(tempCharSpeed);\r\n        updatePrevStats(time,words.length,currError,tempCharSpeed);\r\n        updateStats(time,currError,words.length,charCount,charTime);\r\n        generateWords();\r\n        return;\r\n      }\r\n      setCurrInd(temp);\r\n    }\r\n    else{\r\n      if(errorInd[currInd]===false){\r\n        setCurrError(currError+1);\r\n        errorInd[currInd]=true;\r\n      }\r\n    } \r\n  }\r\n  \r\n  function handleFocus(e){\r\n    setFocus(true);\r\n  }\r\n\r\n  function handleBlur(e){\r\n    setFocus(false);\r\n  }\r\n  function restartTest(){\r\n    var arr1=new Array(26);\r\n    arr1.fill(0);\r\n    setCharCount(arr1);\r\n    var arr2=new Array(26);\r\n    arr2.fill(0);\r\n    setCharTime(arr2);\r\n    setCurrInd(0);\r\n    setCurrError(0);\r\n    var err=new Array(words.length);\r\n    err.fill(false);\r\n    setErrorInd(err);\r\n  }\r\n  function startNewTest(){\r\n    generateWords();\r\n  }\r\n  return (\r\n    <div>\r\n      {\r\n      (loading1||loading2)?\r\n      <div className='loading loading-home' />\r\n      :\r\n      (displaySettings)?\r\n      <Settings darkMode={darkMode} testVariables={testVariables} puncLetters={puncLetters} selectAll={selectAll} setSelectAll={setSelectAll} countChar={countChar} setCountChar={setCountChar} capLet={capLet} setCapLet={setCapLet} puncChar={puncChar} setPuncChar={setPuncChar} generateWords={generateWords} testChar={testChar} setTestChar={setTestChar} setDisplaySettings={setDisplaySettings} wordsCount={wordsCount} setWordsCount={setWordsCount} lettersCount={lettersCount} setLettersCount={setLettersCount} words={words} errorInd={errorInd} currInd={currInd} focus={focus} testFontSize={testFontSize} updateSettings={updateSettings} />\r\n      :\r\n      <div className={`${focus?'':'inactive'}`}>\r\n        <ShowPrevResult totalTime={totalTime} testLength={testLength} error={prevError} restartTest={restartTest} startNewTest={startNewTest} testVariables={testVariables} darkMode={darkMode} charSpeed={charSpeed} setDisplaySettings={setDisplaySettings} testFontSize={testFontSize} setTestFontSize={setTestFontSize}/>\r\n        <DisplayWords words={words} errorInd={errorInd} currInd={currInd} focus={focus} darkMode={darkMode} testFontSize={testFontSize} />  \r\n        <input autoFocus type=\"text\" onKeyDown={handleKey} className={`${darkMode?'hidden-dark':'hidden'}`} onFocus={handleFocus} onBlur={handleBlur} value={`${focus?\"\":\"Click here to activate...\"}`} readOnly/> \r\n      </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n\r\n","import {useEffect} from 'react';\r\nimport {FaGithub,FaLinkedin} from 'react-icons/fa';\r\n\r\nconst About = ({darkMode}) => {\r\n\r\n  useEffect(()=>{\r\n    document.title=\"About the website\";\r\n  },[])\r\n\r\n  return (\r\n    <div className='about-page'>\r\n      <div className={`mystats-info ${darkMode?'mystats-info-dark':''}`}>\r\n        About the website\r\n      </div>\r\n      <p>\r\n        This website was inspired from :  \r\n        <a className='keybr-link' href=\"https://www.keybr.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Keybr.com</a>\r\n      </p>\r\n      <p>\r\n        The website uses computer generated words rather than using words from the dictionary. The main motive of this website was to let users practise typing by keys.\r\n      </p>\r\n      <p style={{\r\n        marginBottom:'5rem'\r\n      }}>\r\n        Computer generated words are often not readable and users have to see every letter before typing hence the average typing speed here is often lesser than the actual average typing speed that one would have while typing actual words.\r\n      </p>\r\n      <span>\r\n        This website is made by:\r\n      </span>\r\n      <br />\r\n      <span>\r\n        Shivam Gopal\r\n      </span>\r\n      <br />\r\n      <span>\r\n        Indian Institute of Technology (Indian School of Mines), Dhanbad\r\n      </span>\r\n      <br />\r\n      <a href=\"https://github.com/ShivamGopal\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <FaGithub className={`${darkMode?'github-dark':'github'}`} />\r\n      </a>\r\n      <a href=\"https://www.linkedin.com/in/shivam-gopal-41aa63201/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <FaLinkedin className={`${darkMode?'linkedin-dark':'linkedin'}`} />\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\n\r\nconst Profile = ({username,dateCreated,darkMode}) => {\r\n  return (\r\n    <div className={`mystats-border ${darkMode?'mystats-border-dark':''}`}>\r\n      <div className='alltimestats-header'>\r\n        Profile :\r\n      </div>\r\n      <div className='mystats-alltimestats'>\r\n        <div className={`mystats-stat ${darkMode?'mystats-stat-dark':''}`}>\r\n          <div className='mystats-stat-detail'>\r\n            Username :\r\n          </div>\r\n          <div className='mystats-stat-output'>\r\n            {username}\r\n          </div>\r\n        </div>\r\n        <div className={`mystats-stat ${darkMode?'mystats-stat-dark':''}`}>\r\n          <div className='mystats-stat-detail'>\r\n            Account Created On :\r\n          </div>\r\n          <div className='mystats-stat-output'>\r\n            {dateCreated}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\n\r\nconst AllTimeStats = ({totalTime,totalTest,averageSpeed,averageError,maxSpeed,totalTestLength,darkMode}) => {\r\n  return (\r\n    <div className={`mystats-border ${darkMode?'mystats-border-dark':''}`}>\r\n      <div className='alltimestats-header'>\r\n        All Time Statistics :\r\n      </div>\r\n      <div className='mystats-alltimestats'>\r\n        <div className={`mystats-stat ${darkMode?'mystats-stat-dark':''}`}>\r\n          <div className='mystats-stat-detail'>\r\n            Total Time Spent :\r\n          </div>\r\n          <div className='mystats-stat-output'>\r\n            {totalTime}\r\n          </div>\r\n        </div>\r\n        <div className={`mystats-stat ${darkMode?'mystats-stat-dark':''}`}>\r\n          <div className='mystats-stat-detail'>\r\n            Total Tests Given :\r\n          </div>\r\n          <div className='mystats-stat-output'>\r\n            {totalTest}\r\n          </div>\r\n        </div>\r\n        <div className={`mystats-stat ${darkMode?'mystats-stat-dark':''}`}>\r\n          <div className='mystats-stat-detail'>\r\n            Average Speed :\r\n          </div>\r\n          <div className='mystats-stat-output'>\r\n            {averageSpeed} WPM\r\n          </div>\r\n        </div>\r\n        <div className={`mystats-stat ${darkMode?'mystats-stat-dark':''}`}>\r\n          <div className='mystats-stat-detail'>\r\n            Average Error :\r\n          </div>\r\n          <div className='mystats-stat-output'>\r\n            {averageError}\r\n          </div>\r\n        </div>\r\n        <div className={`mystats-stat ${darkMode?'mystats-stat-dark':''}`}>\r\n          <div className='mystats-stat-detail'>\r\n            Max Speed :\r\n          </div>\r\n          <div className='mystats-stat-output'>\r\n            {maxSpeed} WPM\r\n          </div>\r\n        </div>\r\n        <div className={`mystats-stat ${darkMode?'mystats-stat-dark':''}`}>\r\n          <div className='mystats-stat-detail'>\r\n            Total Characters Typed :\r\n          </div>\r\n          <div className='mystats-stat-output'>\r\n            {totalTestLength}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllTimeStats\r\n","import React from 'react'\r\n\r\nconst KeySpeed = ({totalCharCount,totalCharTime,totalCharSpeed,darkMode}) => {\r\n  return (\r\n    <div className={`mystats-border ${darkMode?'mystats-border-dark':''}`}>\r\n      <div className='alltimestats-header'>\r\n        All Time Key Speed :\r\n      </div>\r\n      <div className='mystats-keyspeed'>\r\n        {\r\n        totalCharSpeed.map((item,ind)=>{\r\n          var ascii=ind+65;\r\n          var cn=`${item===-1?'speed-1':`${item<=20?'speed-2':`${item<=50?'speed-3':`${item<=80?'speed-4':'speed-5'}`}`}`}`;\r\n          return (<span className={`${cn} ${darkMode?'char-speed-dark':'char-speed'} mystats-char-speed`} key={ind} title={`${item===-1?`You have never typed this character`:`Character = '${String.fromCharCode(ascii)}'\\nAverage Speed= ${item} WPM\\nTotal times typed=${totalCharCount[ind]}`}`}>{String.fromCharCode(ascii)}</span>)\r\n        })\r\n      }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default KeySpeed\r\n","import {useEffect,useState} from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Profile from './MyStats Components/Profile';\r\nimport AllTimeStats from './MyStats Components/AllTimeStats';\r\nimport KeySpeed from './MyStats Components/KeySpeed';\r\n\r\nconst MyStats = ({darkMode}) => {\r\n  const [dateCreated,setDateCreated]=useState('');\r\n  const [username,setUsername]=useState('');\r\n  const [totalTest,setTotalTest]=useState(0);\r\n  const [maxSpeed,setMaxSpeed]=useState(0);\r\n  const [totalTestLength,setTotalTestLength]=useState(0);\r\n  const [totalTime,setTotalTime]=useState('');\r\n  const [averageError,setAverageError]=useState(0);\r\n  const [totalCharCount,setTotalCharCount]=useState([]);\r\n  const [totalCharTime,setTotalCharTime]=useState([]);\r\n  const [totalCharSpeed,setTotalCharSpeed]=useState([]);\r\n  const [averageSpeed,setAverageSpeed]=useState(0);\r\n  const [loading,setLoading]=useState(true);\r\n\r\n  function getUserStats(){\r\n    const token=window.localStorage.getItem('auth-token');\r\n    if(token){\r\n      setLoading(true);\r\n      axios.get('https://key-down.herokuapp.com/api/user/alltimestats',{\r\n        headers: {\r\n          'auth-token':token\r\n        }\r\n      }).then(res=>res.data).then(ans=>{\r\n        const tempDate=new Date(ans.dateCreated);\r\n        const day=tempDate.getDate();\r\n        const month=tempDate.getMonth()+1;\r\n        const year=tempDate.getFullYear();\r\n        const formattedDate=day+\"/\"+month+\"/\"+year;\r\n        setDateCreated(formattedDate);\r\n        setUsername(ans.loginDetails.username);\r\n        setTotalTest(ans.allTimeStats.totalTests);\r\n        setTotalTestLength(ans.allTimeStats.totalTestLength);\r\n        setMaxSpeed(ans.allTimeStats.maxSpeed);\r\n        var milliseconds=ans.allTimeStats.totalTime;\r\n        var seconds=Math.floor((milliseconds/1000)%60);\r\n        var minutes=Math.floor((milliseconds/(1000*60))%60);\r\n        var hours=Math.floor(milliseconds/(1000*60*60));\r\n        hours = (hours < 10) ? \"0\" + hours : hours;\r\n        minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n        seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n        var tempTime=hours+\":\"+minutes+\":\"+seconds;\r\n        setTotalTime(tempTime);\r\n        var avgerr=ans.allTimeStats.averageError;\r\n        setAverageError(avgerr);\r\n        setTotalCharCount(ans.allTimeStats.totalCharCount);\r\n        setTotalCharTime(ans.allTimeStats.totalCharTime);\r\n        var averSpeed=ans.allTimeStats.averageSpeed;\r\n        if(ans.allTimeStats.totalTime===0){\r\n          averSpeed=0;\r\n        }\r\n        setAverageSpeed(averSpeed);\r\n        var tempCharSpeed=[]\r\n        for(var i=0;i<26;i++){\r\n          if(ans.allTimeStats.totalCharCount[i]===0){\r\n            tempCharSpeed.push(-1);\r\n          }\r\n          else{\r\n            var speed=((ans.allTimeStats.totalCharCount[i]*200*60)/ans.allTimeStats.totalCharTime[i]).toFixed(1);\r\n            tempCharSpeed.push(speed);\r\n          }\r\n        }\r\n        setTotalCharSpeed(tempCharSpeed);\r\n        setLoading(false);\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    document.title=\"My Stats\";\r\n    if(window.localStorage.getItem('auth-token')){\r\n      getUserStats();\r\n    }\r\n  },[])\r\n  return (\r\n    <div>\r\n      {\r\n        !window.localStorage.getItem('auth-token')&&<Redirect to=\"/Key-Down/account\" />\r\n      }\r\n      {\r\n        loading?\r\n        <div className='loading loading-home' />\r\n        :\r\n        <div className='mystats'>\r\n          <div className={`mystats-info ${darkMode?'mystats-info-dark':''}`}>\r\n            This page contains your all time typing stats. \r\n          </div>\r\n          <Profile username={username} dateCreated={dateCreated} darkMode={darkMode} />\r\n          <AllTimeStats totalTime={totalTime} totalTest={totalTest} averageSpeed={averageSpeed} averageError={averageError} maxSpeed={maxSpeed} totalTestLength={totalTestLength} darkMode={darkMode} />\r\n          <KeySpeed totalCharCount={totalCharCount} totalCharTime={totalCharTime} totalCharSpeed={totalCharSpeed} darkMode={darkMode} />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyStats\r\n","import React from 'react'\r\n\r\nconst GlobalAverage = ({averageSpeed,averageError,darkMode}) => {\r\n  return (\r\n    <div className={`mystats-border ${darkMode?'mystats-border-dark':''}`}>\r\n      <div className='alltimestats-header'>\r\n         Global Averages :\r\n      </div>\r\n      <div className='mystats-alltimestats'>\r\n        <div className={`mystats-stat ${darkMode?'mystats-stat-dark':''}`} >\r\n          <div className= 'mystats-stat-detail'>\r\n            Average Speed :\r\n          </div>\r\n          <div className='mystats-stat-output'>\r\n            {averageSpeed} WPM\r\n          </div>\r\n        </div>\r\n        <div className={`mystats-stat ${darkMode?'mystats-stat-dark':''}`}>\r\n          <div className= 'mystats-stat-detail'>\r\n            Average Error :\r\n          </div>\r\n          <div className='mystats-stat-output'>\r\n            {averageError}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GlobalAverage;\r\n","import React from 'react'\r\n\r\nconst AverageSpeed = ({avgSpeedList,setShowRes,setUsername,darkMode}) => {\r\n  return (\r\n    <div className={`mystats-border ${darkMode?'mystats-border-dark':''}`}>\r\n      <div className='alltimestats-header'>\r\n         Users with the greatest average speed :\r\n      </div>\r\n      <div className={`${darkMode?'table-border-dark':'table-border'}`}>\r\n        <table className='global-stats-table'>\r\n          <tbody>\r\n            <tr>\r\n              <th className={`${darkMode?'table-header-dark':'table-header'}`}>#</th>\r\n              <th className={`${darkMode?'table-header-dark':'table-header'}`}>Username</th>\r\n              <th className={`${darkMode?'table-header-dark':'table-header'}`}>Average Speed</th>\r\n            </tr>\r\n            {\r\n              avgSpeedList.map((item,ind)=>{\r\n                var cn=`${ind===0?'first':`${ind===1?'second':`${ind===2?'third':''}`}`}`\r\n                return(\r\n                  <tr key={ind}>\r\n                    <td className={`${cn} ${darkMode?'table-data-dark':'table-data'}`}>{ind+1}</td>\r\n                    <td className={`global-stats-username ${darkMode?'table-data-dark':'table-data'}`} title=\"Click to view the user's profile.\" onClick={()=>{\r\n                      setUsername(item.username);\r\n                      setShowRes(true);\r\n                    }}>{item.username}</td>\r\n                    <td className={`${darkMode?'table-data-dark':'table-data'}`}>{item.averageSpeed} WPM</td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <p className='global-stats-condition'>\r\n        <span style={{color:'red'}}>\r\n          *\r\n        </span>\r\n        <span> Minimum 10 tests required.\r\n        </span> \r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AverageSpeed\r\n","import React from 'react'\r\n\r\nconst MaxSpeed = ({maxSpeedList,setShowRes,setUsername,darkMode}) => {\r\n  return (\r\n    <div className={`mystats-border ${darkMode?'mystats-border-dark':''}`}>\r\n      <div className='alltimestats-header'>\r\n         Users with the highest maximum speed :\r\n      </div>\r\n      <div className={`${darkMode?'table-border-dark':'table-border'}`}>\r\n        <table className='global-stats-table'>\r\n          <tbody>\r\n            <tr>\r\n              <th className={`${darkMode?'table-header-dark':'table-header'}`}>#</th>\r\n              <th className={`${darkMode?'table-header-dark':'table-header'}`}>Username</th>\r\n              <th className={`${darkMode?'table-header-dark':'table-header'}`}>Maximum Speed</th>\r\n            </tr>\r\n            {\r\n              maxSpeedList.map((item,ind)=>{\r\n                var cn=`${ind===0?'first':`${ind===1?'second':`${ind===2?'third':''}`}`}`\r\n                return(\r\n                  <tr key={ind}>\r\n                    <td className={`${cn} ${darkMode?'table-data-dark':'table-data'}`}>{ind+1}</td>\r\n                    <td className={`global-stats-username ${darkMode?'table-data-dark':'table-data'}`} title=\"Click to view the user's profile.\" onClick={()=>{\r\n                      setUsername(item.username);\r\n                      setShowRes(true);\r\n                    }}>{item.username}</td>\r\n                    <td className={`${darkMode?'table-data-dark':'table-data'}`}>{item.maxSpeed} WPM</td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MaxSpeed\r\n","import React from 'react'\r\n\r\nconst MinError = ({minErrorList,setShowRes,setUsername,darkMode}) => {\r\n  return (\r\n    <div className={`mystats-border ${darkMode?'mystats-border-dark':''}`}>\r\n      <div className='alltimestats-header'>\r\n         Users with the least average error :\r\n      </div>\r\n      <div className={`${darkMode?'table-border-dark':'table-border'}`}>\r\n        <table className='global-stats-table'>\r\n          <tbody>\r\n            <tr>\r\n              <th className={`${darkMode?'table-header-dark':'table-header'}`}>#</th>\r\n              <th className={`${darkMode?'table-header-dark':'table-header'}`}>Username</th>\r\n              <th className={`${darkMode?'table-header-dark':'table-header'}`}>Average Error</th>\r\n            </tr>\r\n            {\r\n              minErrorList.map((item,ind)=>{\r\n                var cn=`${ind===0?'first':`${ind===1?'second':`${ind===2?'third':''}`}`}`\r\n                return(\r\n                  <tr key={ind}>\r\n                    <td className={`${cn} ${darkMode?'table-data-dark':'table-data'}`}>{ind+1}</td>\r\n                    <td className={`global-stats-username ${darkMode?'table-data-dark':'table-data'}`} title=\"Click to view the user's profile.\" onClick={()=>{\r\n                      setUsername(item.username);\r\n                      setShowRes(true);\r\n                    }}>{item.username}</td>\r\n                    <td className={`${darkMode?'table-data-dark':'table-data'}`}>{item.averageError}</td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <p className='global-stats-condition'>\r\n        <span style={{color:'red'}}>\r\n          *\r\n        </span>\r\n        <span> Minimum 10 tests required.\r\n        </span> \r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MinError\r\n","import React from 'react'\r\n\r\nconst AverageCharSpeed = ({averageCharSpeed,totalCharCount,darkMode}) => {\r\n  return (\r\n    <div className={`mystats-border ${darkMode?'mystats-border-dark':''}`}>\r\n      <div className='alltimestats-header'>\r\n        Average Key Speed :\r\n      </div>\r\n      <div className='mystats-keyspeed'>\r\n        {\r\n        averageCharSpeed.map((item,ind)=>{\r\n          var ascii=ind+65;\r\n          var cn=`${item===-1?'speed-1':`${item<=20?'speed-2':`${item<=50?'speed-3':`${item<=80?'speed-4':'speed-5'}`}`}`}`;\r\n          return (<span className={`${cn} ${darkMode?'char-speed-dark':'char-speed'} mystats-char-speed`} key={ind} title={`${item===-1?`This character has never been typed`:`Character = '${String.fromCharCode(ascii)}'\\nAverage Speed= ${item} WPM\\nTotal times typed=${totalCharCount[ind]}`}`}>{String.fromCharCode(ascii)}</span>)\r\n        })\r\n      }\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default AverageCharSpeed\r\n","import React from 'react'\r\n\r\nconst Profile = ({username,darkMode}) => {\r\n  return (\r\n    <div className='mystats-alltimestats'>\r\n      <div className={`mystats-stat ${darkMode?'mystats-stat-dark':''}`}>\r\n        <div className='mystats-stat-detail'>\r\n          Username :\r\n        </div>\r\n        <div className='mystats-stat-output'>\r\n          {username}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","const UserStats = ({totalTests,maxSpeed,averageSpeed,averageError,darkMode}) => {\r\n  return (\r\n    <div className='mystats-alltimestats'>\r\n      <div className={`mystats-stat ${darkMode?'mystats-stat-dark':''}`}>\r\n        <div className='mystats-stat-detail'>\r\n          Total Tests Given :\r\n        </div>\r\n        <div className='mystats-stat-output'>\r\n          {totalTests}\r\n        </div>\r\n      </div>\r\n      <div className={`mystats-stat ${darkMode?'mystats-stat-dark':''}`}>\r\n        <div className='mystats-stat-detail'>\r\n          Max Speed :\r\n        </div>\r\n        <div className='mystats-stat-output'>\r\n          {maxSpeed} WPM\r\n        </div>\r\n      </div>\r\n      <div className={`mystats-stat ${darkMode?'mystats-stat-dark':''}`}>\r\n        <div className='mystats-stat-detail'>\r\n          Average Speed :\r\n        </div>\r\n        <div className='mystats-stat-output'>\r\n          {averageSpeed} WPM\r\n        </div>\r\n      </div>\r\n      <div className={`mystats-stat ${darkMode?'mystats-stat-dark':''}`}>\r\n        <div className='mystats-stat-detail'>\r\n          Average Error :\r\n        </div>\r\n        <div className='mystats-stat-output'>\r\n          {averageError}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserStats\r\n","const KeySpeed = ({charSpeed,darkMode}) => {\r\n  return (\r\n    <div className='mystats-keyspeed'>\r\n        {\r\n        charSpeed.map((item,ind)=>{\r\n          var ascii=ind+65;\r\n          var cn=`${item===-1?'speed-1':`${item<=20?'speed-2':`${item<=50?'speed-3':`${item<=80?'speed-4':'speed-5'}`}`}`}`;\r\n          return (<span className={`${cn} ${darkMode?'char-speed-dark':'char-speed'} mystats-char-speed`} key={ind} title={`${item===-1?`User has never typed this character`:`Character = '${String.fromCharCode(ascii)}'\\nAverage Speed= ${item} WPM`}`}>{String.fromCharCode(ascii)}</span>)\r\n        })\r\n      }\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default KeySpeed\r\n","import axios from 'axios';\r\nimport { useState,useEffect } from 'react';\r\nimport {BiArrowBack} from 'react-icons/bi';\r\nimport Profile from './Profile';\r\nimport UserStats from './UserStats';\r\nimport KeySpeed from './KeySpeed';\r\n\r\nconst SearchRes = ({username,setShowRes,flag,darkMode}) => {\r\n  const [totalTests,setTotalTests]=useState(0);\r\n  const [maxSpeed,setMaxSpeed]=useState(0);\r\n  const [averageError,setAverageError]=useState(0);\r\n  const [averageSpeed,setAverageSpeed]=useState(0);\r\n  const [charSpeed,setCharSpeed]=useState(0);\r\n  const [loading,setLoading]=useState(true);\r\n\r\n  useEffect(()=>{\r\n    function getUserStats(){\r\n      axios.get('https://key-down.herokuapp.com/api/users/userstats',{\r\n        headers: {\r\n          'username':username\r\n        }\r\n      }).then(res=>res.data).then(ans=>{\r\n        setTotalTests(ans.allTimeStats.totalTests);\r\n        setMaxSpeed(ans.allTimeStats.maxSpeed);\r\n        setAverageError(ans.allTimeStats.averageError);\r\n        setAverageSpeed(ans.allTimeStats.averageSpeed);\r\n        let tempCharSpeed=[];\r\n        for(var i=0;i<26;i++){\r\n          let time=ans.allTimeStats.totalCharTime[i];\r\n          let count=ans.allTimeStats.totalCharCount[i];\r\n          if(count===0){\r\n            tempCharSpeed.push(-1);\r\n          }\r\n          else{\r\n            let speed=((count*200*60)/time).toFixed(1);\r\n            tempCharSpeed.push(speed);\r\n          }\r\n        }\r\n        setCharSpeed(tempCharSpeed);\r\n        setLoading(false);\r\n      })\r\n    };\r\n    getUserStats();\r\n  },[username]);\r\n\r\n  return (\r\n    <div>\r\n    {\r\n      loading?\r\n      <div className='loading loading-home' />\r\n      :\r\n      <div className='search-res'>\r\n        <div className='back' onClick={()=>{\r\n            setShowRes(false);\r\n        }}>\r\n          <BiArrowBack className='back-arrow' />\r\n          <span className='back-text'>\r\n            Back to \r\n          </span>\r\n          {\r\n            flag==='1'?\r\n            <span className='back-text'> Search</span>\r\n            :\r\n            <span className='back-text'> Global Stats</span>\r\n          }\r\n        </div>\r\n        <h3 className='search-res-header'>\r\n          Public Profile of {username}\r\n        </h3>\r\n        <Profile username={username} darkMode={darkMode} />\r\n        <div className={`${darkMode?'search-res-break-dark':'search-res-break'}`} />\r\n        <UserStats totalTests={totalTests} maxSpeed={maxSpeed} averageSpeed={averageSpeed} averageError={averageError} darkMode={darkMode} />\r\n        <div className={`${darkMode?'search-res-break-dark':'search-res-break'}`} />\r\n        <KeySpeed charSpeed={charSpeed} darkMode={darkMode} />\r\n      </div>\r\n    }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchRes\r\n","import {useState,useEffect} from 'react'\r\nimport axios from 'axios';\r\nimport GlobalAverage from './GlobalStats Components/GlobalAverage';\r\nimport AverageSpeed from './GlobalStats Components/AverageSpeed';\r\nimport MaxSpeed from './GlobalStats Components/MaxSpeed';\r\nimport MinError from './GlobalStats Components/MinError';\r\nimport AverageCharSpeed from './GlobalStats Components/AverageCharSpeed';\r\nimport SearchRes from './SearchUser Components/SearchRes';\r\n\r\nconst GlobalStats = ({darkMode}) => {\r\n  const [loading,setLoading]=useState(true);\r\n  const [averageSpeed,setAverageSpeed]=useState(0);\r\n  const [averageError,setAverageError]=useState(0);\r\n  const [averageCharSpeed,setAverageCharSpeed]=useState([]);\r\n  const [totalCharCount,setTotalCharCount]=useState([]);\r\n  const [avgSpeedList,setAvgSpeedList]=useState([]);\r\n  const [minErrorList,setMinErrorList]=useState([]);\r\n  const [maxSpeedList,setMaxSpeedList]=useState([]);\r\n  const [username,setUsername]=useState('');\r\n  const [showRes,setShowRes]=useState(false);\r\n\r\n  function getGlobalStats(){\r\n    setLoading(true);\r\n    axios.get('https://key-down.herokuapp.com/api/users/globalstats').then(res=>res.data).then(ans=>{\r\n      var avgerr=ans.averageError;\r\n      setAverageError(avgerr);\r\n\r\n      var avgspeed=ans.averageSpeed;\r\n      setAverageSpeed(avgspeed);\r\n\r\n      setAverageCharSpeed(ans.averageCharSpeed);\r\n      setTotalCharCount(ans.totalCharCount);\r\n\r\n      var avgList=[],errList=[],maxList=[];\r\n      for(var i=0;i<ans.averageSpeedSortedUsers.length;i++){\r\n        avgList.push({\r\n          'username':ans.averageSpeedSortedUsers[i].loginDetails.username,\r\n          'averageSpeed':ans.averageSpeedSortedUsers[i].allTimeStats.averageSpeed\r\n        });\r\n\r\n        errList.push({\r\n          'username':ans.errorSortedUsers[i].loginDetails.username,\r\n          'averageError':ans.errorSortedUsers[i].allTimeStats.averageError\r\n        });\r\n      }\r\n\r\n      for(var j=0;j<ans.maxSpeedSortedUsers.length;j++){\r\n        maxList.push({\r\n          'username':ans.maxSpeedSortedUsers[j].loginDetails.username,\r\n          'maxSpeed':ans.maxSpeedSortedUsers[j].allTimeStats.maxSpeed\r\n        })\r\n      };\r\n\r\n      setAvgSpeedList(avgList);\r\n      setMinErrorList(errList);\r\n      setMaxSpeedList(maxList);\r\n      setLoading(false);\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    document.title=\"Global Stats\";\r\n    getGlobalStats()\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        loading?\r\n        <div className='loading loading-home' />\r\n        :\r\n        showRes?\r\n        <SearchRes username={username} setShowRes={setShowRes} flag='2' darkMode={darkMode} />\r\n        :\r\n        <div className='mystats'>\r\n          <div className={`mystats-info ${darkMode?'mystats-info-dark':''}`}>\r\n            This page contains combined stats of all the users on this website. \r\n          </div>\r\n          <GlobalAverage averageSpeed={averageSpeed} averageError={averageError} darkMode={darkMode} />\r\n          <AverageSpeed avgSpeedList={avgSpeedList} setShowRes={setShowRes} setUsername={setUsername} darkMode={darkMode} />\r\n          <MinError minErrorList={minErrorList} setShowRes={setShowRes} setUsername={setUsername} darkMode={darkMode} />\r\n          <MaxSpeed maxSpeedList={maxSpeedList} setShowRes={setShowRes} setUsername={setUsername} darkMode={darkMode}/>\r\n          <AverageCharSpeed averageCharSpeed={averageCharSpeed} totalCharCount={totalCharCount} darkMode={darkMode} />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GlobalStats\r\n","import {useState,useEffect} from 'react';\r\nimport {FiSearch} from 'react-icons/fi';\r\nimport axios from 'axios';\r\nimport SearchRes from './SearchUser Components/SearchRes';\r\n\r\nconst SearchUser = ({darkMode}) => {\r\n  const [showRes,setShowRes]=useState(false);\r\n  const [username,setUsername]=useState('');\r\n  const [userList,setUserList]=useState([]);\r\n  const [filteredUserList,setFilteredUserList]=useState([]);\r\n  const [showUsername,setShowUsername]=useState(false);\r\n  const [count,setCount]=useState(10);\r\n  const [loading,setLoading]=useState(true);\r\n\r\n  function getUserList(){\r\n    setLoading(true);\r\n    axios.get('https://key-down.herokuapp.com/api/users').then(res=>res.data).then(ans=>{\r\n      setUserList(ans);\r\n      setLoading(false);\r\n    }).catch(err=>{\r\n      console.log(err)\r\n    });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    document.title=\"Search\";\r\n    getUserList();\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n      loading?<div className='loading loading-home' />\r\n      :\r\n      showRes?<SearchRes username={username} setShowRes={setShowRes} flag='1' darkMode={darkMode} />\r\n      :\r\n      <div>\r\n      <div className='icon-align'>\r\n        <input className={`${darkMode?'search-input-dark':'search-input'}`} type='search' placeholder='Type to Search User' onChange={(e)=>{\r\n          setCount(10);\r\n          if(e.target.value===''){\r\n            setShowUsername(false);\r\n            return;\r\n          }\r\n          else{\r\n            setShowUsername(true);\r\n          }\r\n          let tempUserList=userList.filter((item)=>{\r\n            let dupItem=item.toLowerCase();\r\n            let searchVal=e.target.value.toLowerCase();\r\n            if(dupItem.includes(searchVal)){\r\n              return true;\r\n            }\r\n            else{\r\n              return false;\r\n            }\r\n          })\r\n          setFilteredUserList(tempUserList);\r\n        }}>\r\n        </input>\r\n        <FiSearch className={`${darkMode?'search-icon-dark':'search-icon'}`} />\r\n      </div> \r\n      <div className='search-result'>\r\n        {\r\n        showUsername?\r\n        filteredUserList.length>0?\r\n        <div>\r\n          {\r\n          filteredUserList.slice(0,count).map((item,ind)=>{\r\n            return <span title=\"Click to view the user's profile.\" key={ind} className={`${darkMode?'search-username-dark':'search-username'}`} onClick={()=>{\r\n              setUsername(item);\r\n              setShowUsername(false);\r\n              setShowRes(true);\r\n            }}>\r\n              {item}\r\n            </span>\r\n          })\r\n          }\r\n          {\r\n          count<filteredUserList.length&&\r\n          <button className={`${darkMode?'search-showmore-dark':'search-showmore'}`} onClick={()=>{\r\n            setCount(count+10);\r\n          }}>\r\n            Show More\r\n          </button>\r\n          }\r\n        </div>\r\n        :\r\n        <div>\r\n          Sorry, no user with the entered name found.\r\n        </div>\r\n        :\r\n        <div />\r\n        }\r\n      </div>\r\n      </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchUser\r\n","const Header = ({darkMode}) => {\r\n  return (\r\n    <div className=\"top\" style={darkMode?{borderBottom:'1px solid #333'}:{}}/> \r\n    \r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nexport const LeftMargin = ({darkMode}) => {\r\n  return (\r\n    <div className=\"left\" style={darkMode?{borderRight:'1px solid #333'}:{}} />\r\n  )\r\n}\r\n\r\nexport default LeftMargin\r\n","import React, {useState,useEffect} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {FaSun,FaMoon,FaKeyboard,FaInfoCircle,FaGlobe,FaSearch} from \"react-icons/fa\";\r\nimport {ImStatsDots} from \"react-icons/im\";\r\nimport {BsFillPersonFill} from 'react-icons/bs';\r\nimport axios from 'axios';\r\n\r\nconst NavBar = ({darkMode,setDarkMode,globalLoggedIn}) => {\r\n  const [username,setUsername]=useState('');\r\n  const [loading,setLoading]=useState(false);\r\n\r\n  function isLoggedIn(){\r\n    var token=window.localStorage.getItem('auth-token');\r\n    if(token){\r\n      setLoading(true);\r\n      axios.get('https://key-down.herokuapp.com/api/user/username',{\r\n        headers: {\r\n          'auth-token':window.localStorage.getItem('auth-token')\r\n        }\r\n      }).then(res=>res.data).then(ans=>{\r\n        setLoading(false);\r\n        setUsername(ans.loginDetails.username);\r\n      }).catch(()=>{\r\n        setUsername('');\r\n      })\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    isLoggedIn();\r\n  },[globalLoggedIn]);\r\n  \r\n  function changeDarkState(){\r\n    window.localStorage.setItem('dm',!darkMode);\r\n    setDarkMode(!darkMode);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"right\">\r\n      <NavLink activeClassName={`${darkMode?'nav-link-active-dark':'nav-link-active'}`} className={`${darkMode?'nav-link-dark':'nav-link'}`} to='/Key-Down/account'>\r\n        <div className={`sign-in-circle ${globalLoggedIn?'sign-in-circle-border':''}`}>\r\n          {\r\n            globalLoggedIn?\r\n            <span className='login-initials'>{username.charAt(0).toUpperCase()}</span>:\r\n            <BsFillPersonFill className=\"login-icon\" />\r\n          }\r\n        </div>\r\n        {\r\n          globalLoggedIn?\r\n          loading?\r\n          <div className='loading loading-navbar' />\r\n          :\r\n          <div style={{textAlign:'center',overflow:'hidden'}}>{username}</div>:\r\n          <div style={{textAlign:'center'}}>Sign in / Register </div>\r\n        }\r\n      </NavLink>\r\n      <div className={`${darkMode?'nav-icons-dark':'nav-icons'}`}>\r\n        {\r\n        (darkMode)?<span title=\"Switch to Light Mode\" onClick={changeDarkState} ><FaSun fontSize=\"24px\" color=\"#ffff77\" cursor=\"pointer\"/></span>:\r\n        <span title=\"Switch to Dark Mode\" onClick={changeDarkState}><FaMoon fontSize=\"24px\" color=\"#000044\" cursor=\"pointer\" /></span>\r\n        }\r\n      </div> \r\n      <NavLink activeClassName={`${darkMode?'nav-link-active-dark':'nav-link-active'}`} className={`${darkMode?'nav-link-dark':'nav-link'}`} to='/Key-Down' exact><FaKeyboard className=\"link-icon\" />Practise\r\n      </NavLink>\r\n      <NavLink activeClassName={`${darkMode?'nav-link-active-dark':'nav-link-active'}`} className={`${darkMode?'nav-link-dark':'nav-link'}`} to='/Key-Down/my-stats'><ImStatsDots className=\"link-icon\" />My Stats\r\n      </NavLink>\r\n      <NavLink activeClassName={`${darkMode?'nav-link-active-dark':'nav-link-active'}`} className={`${darkMode?'nav-link-dark':'nav-link'}`} to='/Key-Down/global-stats'><FaGlobe className=\"link-icon\" />Global Stats\r\n      </NavLink>\r\n      <NavLink activeClassName={`${darkMode?'nav-link-active-dark':'nav-link-active'}`} className={`${darkMode?'nav-link-dark':'nav-link'}`} to='/Key-Down/search'><FaSearch className=\"link-icon\" />\r\n      Search \r\n      </NavLink>\r\n      <NavLink activeClassName={`${darkMode?'nav-link-active-dark':'nav-link-active'}`} className={`${darkMode?'nav-link-dark':'nav-link'}`}  to='/Key-Down/about'><FaInfoCircle className=\"link-icon\" />About\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","const Footer = ({darkMode}) => {\r\n  return (\r\n    <div className=\"bottom\" style={darkMode?{borderTop:'1px solid #333'}:{}}>\r\n      <div className='bottom-text'>\r\n        For any suggestions or queries email to: \r\n        <a href=\"mailto:shivamgopal55@gmail.com\" className='bottom-mailid'>\r\n          shivamgopal55@gmail.com\r\n        </a>\r\n        <div>\r\n          Copyright<span style={{fontSize:'1.5rem',position:'relative',top:'0.2rem'}}>&copy;</span> KeyDown.com\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, {useState,useEffect} from 'react';\r\nimport './App.css';\r\nimport Account from './Account';\r\nimport Home from './Home';\r\nimport About from './About';\r\nimport MyStats from './MyStats';\r\nimport GlobalStats from './GlobalStats';\r\nimport SearchUser from './SearchUser';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Header from './Layout Components/Header';\r\nimport LeftMargin from './Layout Components/LeftMargin';\r\nimport NavBar from './Layout Components/NavBar';\r\nimport Footer from './Layout Components/Footer';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [darkMode,setDarkMode]=useState(false);\r\n  const [testFontSize,setTestFontSize]=useState(0);\r\n  const [globalLoggedIn,setGlobalLoggedIn]=useState(false);\r\n\r\n  async function updateStats(time,error,length,charCount,charTime){\r\n    if(!window.localStorage.getItem('auth-token')){\r\n      return;\r\n    }\r\n    const body={\r\n      'testLength':length,\r\n      'time':time,\r\n      'error':error,\r\n      'charCount':charCount,\r\n      'charTime':charTime\r\n    };\r\n    try{\r\n      await axios({\r\n        method:'put',\r\n        url:'https://key-down.herokuapp.com/api/user/updatestats',\r\n        data:body,\r\n        headers: {\r\n          'auth-token':window.localStorage.getItem('auth-token')\r\n        }\r\n      });\r\n    }catch(err){\r\n      console.log(err.response);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    const token=window.localStorage.getItem('auth-token');\r\n    if(token){\r\n      setGlobalLoggedIn(true);\r\n    }\r\n    else{\r\n      setGlobalLoggedIn(false);\r\n    }\r\n    const dm=window.localStorage.getItem('dm');\r\n    if(dm==='true'){\r\n      setDarkMode(true);\r\n    }\r\n    else{\r\n      setDarkMode(false);\r\n    }\r\n    const fs=window.localStorage.getItem('fs');\r\n    if(fs==='1'){\r\n      setTestFontSize(1);\r\n    }\r\n    else if(fs==='2'){\r\n      setTestFontSize(2);\r\n    }\r\n    else{\r\n      setTestFontSize(0);\r\n    }\r\n  },[]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className={`App ${darkMode?'theme-dark':'theme'}`} >\r\n        <Header darkMode={darkMode}/>\r\n        <div className=\"columns\">\r\n          <LeftMargin darkMode={darkMode}/>\r\n          <div className='center' style={darkMode?{borderRight:'1px solid #333'}:{}}>\r\n            <Switch>\r\n              <Route path=\"/Key-Down/account\">\r\n                <Account darkMode={darkMode} globalLoggedIn={globalLoggedIn} setGlobalLoggedIn={setGlobalLoggedIn} />\r\n              </Route>\r\n              <Route path=\"/Key-Down/my-stats\">\r\n                <MyStats darkMode={darkMode} />\r\n              </Route>\r\n              <Route path=\"/Key-Down/global-stats\">\r\n                <GlobalStats darkMode={darkMode} />\r\n              </Route>\r\n              <Route path=\"/Key-Down/search\">\r\n                <SearchUser darkMode={darkMode} />\r\n              </Route>\r\n              <Route path=\"/Key-Down/about\">\r\n                <About darkMode={darkMode} />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Home darkMode={darkMode} testFontSize={testFontSize} setTestFontSize={setTestFontSize} updateStats={updateStats} />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n          <NavBar darkMode={darkMode} setDarkMode={setDarkMode} globalLoggedIn={globalLoggedIn} />\r\n        </div>\r\n        <Footer darkMode={darkMode}/>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}